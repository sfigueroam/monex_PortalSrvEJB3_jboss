/*
 * Source: ArIngresarListaCaller.java - Generated by OBCOM SQL Wizard 5.1.295
 * Author: Felipe Gonzalez Mendoza (Tesoreria General de la Republica)
 *
 * Copyright (c) OBCOM INGENIERIA S.A. (Chile). All rights reserved.
 *
 * All rights to this product are owned by OBCOM INGENIERIA S.A. and may only be
 * used  under  the  terms of its associated license document. You may NOT copy,
 * modify, sublicense, or distribute this source file or portions of  it  unless
 * previously  authorized in writing by OBCOM INGENIERIA S.A. In any event, this
 * notice and above copyright must always be included verbatim with this file.
 */

package cl.teso.reca.pkgcutservicestrx;

import java.math.BigDecimal;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Types;
import java.util.ArrayList;
import javax.sql.DataSource;
import javax.sql.RowSet;

/**
 * Implements a caller of procedure "PKG_CUT_SERVICES_TRX.AR_INGRESAR_LISTA".
 * <pre>
 * IN_LISTA_AR        TRN_AVISO_RECIBO_LIST  Input
 * OUT_CODIGOS_BARRA  TBL_CHAR_T             Output
 * OUT_FOLIOS_AR      TBL_NUM_T              Output
 * </pre>
 */
public class IngresarMultiArCaller extends ProcedureCaller
{
    /**
     * Executes procedure "PKG_CUT_SERVICES_TRX.AR_INGRESAR_LISTA" using a DataSource.
     */
    public static IngresarMultiArResult execute(DataSource dataSource, String usuario,  TrnAvisoReciboMRowtype[] inListaAr, BigDecimal montoTotal,  String codigoBarra)
        throws SQLException
    {
        Connection conn = dataSource.getConnection();
        try {
            return execute(conn, usuario,  inListaAr, montoTotal,  codigoBarra);
        } finally {
            conn.close();
        }
    }
    
    /*
     * in_usuario       IN VARCHAR2, -- Usuario
                              in_lista_ar      IN trn_aviso_recibo_list, --Object Type con lista de ARs
                              in_monto_total   IN NUMBER,
                              in_codigo_barra  IN VARCHAR2, -- Opcional. Codigo de Barra del multiar. si viene se ocupa este como multiAR
                              out_errlvl       OUT NUMBER, -- nivel de error
                              out_mensajes     OUT VARCHAR2, -- mensaje de resultado                     
                              out_reca_msg     OUT SYS_REFCURSOR, -- Cursor Mensajes Error/Validacion
                              out_codigo_barra OUT VARCHAR2) --Codigo de Barra del multiar
                              */

    /**
     * Executes procedure "PKG_CUT_SERVICES_TRX.AR_INGRESAR_LISTA" using a Connection.
     */
    public static IngresarMultiArResult execute(Connection conn, String usuario,  TrnAvisoReciboMRowtype[] inListaAr, BigDecimal montoTotal,  String codigoBarra)
        throws SQLException
    {
        IngresarMultiArResult result = new IngresarMultiArResult();
        ArrayList resultSets = new ArrayList();
        CallableStatement call = conn.prepareCall("{call PKG_CUT_SERVICES_TRX.INGRESAR_MULTI_AR(?,?,?,?,?,?,?,?)}");
        try {
        	call.setString(1, usuario);
        	call.setObject(2, dbTrnAvisoReciboMList(inListaAr, conn));
            call.setBigDecimal(3, montoTotal);           
            call.setString(4, codigoBarra);
            call.registerOutParameter(5, Types.NUMERIC);            
            call.registerOutParameter(6, Types.VARCHAR);            
            call.registerOutParameter(7, ORACLE_CURSOR);
            call.registerOutParameter(8, Types.VARCHAR);
            call.execute();
            result.setOutErrlvl(call.getBigDecimal(5));
            result.setOutMensajes(call.getString(6));
            resultSets.add(toRowSet((ResultSet)call.getObject(7)));
            result.setOutCodigoBarra(call.getString(8));
        } finally {
            call.close();
        }
        if (resultSets.size() > 0) {
            RowSet[] rowSets = new RowSet[resultSets.size()];
            result.setRowSets((RowSet[]) resultSets.toArray(rowSets));
        }
        return result;
    }
}
